/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enigma;

/**
 *
 * @author Abhishek Balam
 */

import java.awt.*;
import java.io.*;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Key extends javax.swing.JFrame {

    /**
     * Creates new form EnterKey
     */
    public Key(File textFile, int Mode, int Choice) {
        initComponents();
        text=textFile;
        mode=Mode;
        choice=Choice;
        
        if(mode ==1){
            keyFile.setText("Save Key as File");
                if(choice==1){
                    try{
                    keyGen = KeyGenerator.getInstance("AES");
                    keyGen.init(128);
                    }
                    catch(Exception e){
                        
                    }
                }
                else if(choice==2){
                    try{
                    keyGen = KeyGenerator.getInstance("Blowfish");
                    keyGen.init(128);
                    }
                    catch(Exception e){
                        
                    }
                }
                else if(choice==3){
                    try{
                    keyGen = KeyGenerator.getInstance("DESede");
                    keyGen.init(168);
                    }
                    catch(Exception e){
                        
                    }
                    
                }
            
            SecretKey secretKey = keyGen.generateKey();
            Key =new String(Base64.getEncoder().encode(secretKey.getEncoded()));  
            label.setText("Note down the Encryption Key");
            keyField.setText(Key);
            
            }

        else if(mode ==2){
            keyFile.setText("Open Key File");
            label.setText("Enter the Encryption Key");
        }
        super.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/Images/container_file.png")).getImage());
       super.setLocationRelativeTo(null);
       super.setVisible(true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        movePanel = new javax.swing.JPanel();
        close = new javax.swing.JButton();
        minimise = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        keyField = new javax.swing.JTextField();
        Continue = new javax.swing.JButton();
        keyFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLayeredPane1.setBackground(new java.awt.Color(0, 0, 0));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255), 3));
        jLayeredPane1.setOpaque(true);

        movePanel.setBackground(new java.awt.Color(0, 0, 0));
        movePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        movePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                movePanelMouseDragged(evt);
            }
        });
        movePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                movePanelMousePressed(evt);
            }
        });

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close (1).png"))); // NOI18N
        close.setContentAreaFilled(false);
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.setPreferredSize(new java.awt.Dimension(43, 41));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        minimise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Char - Minus (1).png"))); // NOI18N
        minimise.setToolTipText("");
        minimise.setContentAreaFilled(false);
        minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimiseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimiseMouseExited(evt);
            }
        });
        minimise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimiseActionPerformed(evt);
            }
        });

        label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        label.setForeground(new java.awt.Color(255, 255, 255));
        label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout movePanelLayout = new javax.swing.GroupLayout(movePanel);
        movePanel.setLayout(movePanelLayout);
        movePanelLayout.setHorizontalGroup(
            movePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label)
                .addGap(44, 44, 44)
                .addComponent(minimise, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        movePanelLayout.setVerticalGroup(
            movePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movePanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(movePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimise)
                    .addComponent(label))
                .addGap(3, 3, 3))
        );

        keyField.setBackground(new java.awt.Color(102, 102, 102));
        keyField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        keyField.setForeground(new java.awt.Color(255, 255, 255));
        keyField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255), 2));
        keyField.setCaretColor(new java.awt.Color(255, 255, 255));

        Continue.setBackground(new java.awt.Color(0, 0, 0));
        Continue.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Continue.setForeground(new java.awt.Color(0, 255, 255));
        Continue.setText("Continue");
        Continue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255), 2));
        Continue.setContentAreaFilled(false);
        Continue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Continue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueActionPerformed(evt);
            }
        });

        keyFile.setBackground(new java.awt.Color(0, 0, 0));
        keyFile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        keyFile.setForeground(new java.awt.Color(0, 255, 255));
        keyFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255), 2));
        keyFile.setContentAreaFilled(false);
        keyFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        keyFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(movePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(keyFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(movePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyFile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        jLayeredPane1.setLayer(movePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(keyField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Continue, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(keyFile, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        // TODO add your handling code here:
        close.setSize(30, 30);
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        // TODO add your handling code here:
        close.setSize(29, 29);
    }//GEN-LAST:event_closeMouseExited

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        super.dispose();
        
    }//GEN-LAST:event_closeActionPerformed

    private void minimiseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimiseMouseEntered
        // TODO add your handling code here:
        minimise.setSize(31,26);
    }//GEN-LAST:event_minimiseMouseEntered

    private void minimiseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimiseMouseExited
        // TODO add your handling code here:
        minimise.setSize(30,25);
    }//GEN-LAST:event_minimiseMouseExited

    private void minimiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimiseActionPerformed
        // TODO add your handling code here:
        super.setState(this.ICONIFIED);
    }//GEN-LAST:event_minimiseActionPerformed

    private void movePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movePanelMouseDragged
        // TODO add your handling code here:
        int thisX = this.getLocation().x;
        int thisY = this.getLocation().y;

        // Determine how much the mouse moved since the initial click
        int xMoved = (thisX + evt.getX()) - (thisX + initialClick.x);
        int yMoved = (thisY + evt.getY()) - (thisY + initialClick.y);

        // Move window to this position
        int X = thisX + xMoved;
        int Y = thisY + yMoved;
        this.setLocation(X, Y);
    }//GEN-LAST:event_movePanelMouseDragged

    private void ContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueActionPerformed
        // TODO add your handling code here:
        
        if(mode==1){
            Key=keyField.getText();
            switch(choice){
                        
                case 1:{
                    AES p = new AES(text,1,Key);
                    TextEditor.statusLabel.setText("AES Encrypted.");
                    super.dispose();
                    break;
                    }
                case 2:{
                    Blowfish a = new Blowfish(text,1,Key);
                    TextEditor.statusLabel.setText("Blowfish Encrypted.");
                    super.dispose();
                    break;
                    }
                case 3:{
                    TripleDES a = new TripleDES(text,1,Key);
                    TextEditor.statusLabel.setText("Triple DES Encrypted.");
                    super.dispose();
                    break;
                    }
            }
            
        
        }
        else if(mode==2) {
            switch(choice){
                case 1:{
                    AES p = new AES(text,2,Key);
                    TextEditor.statusLabel.setText("AES Decrypted.");
                    super.dispose();
                    break;
                    }
                case 2:{
                    Blowfish a = new Blowfish(text,2,Key);
                    TextEditor.statusLabel.setText("Blowfish Decrypted.");
                    super.dispose();
                    break;
                    }
                case 3:{
                    TripleDES a = new TripleDES(text,2,Key);
                    TextEditor.statusLabel.setText("Triple DES Decrypted.");
                    super.dispose();
                    break;
                    }
            }
        }
    }//GEN-LAST:event_ContinueActionPerformed

    private void keyFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyFileActionPerformed
        // TODO add your handling code here:
        if(mode==1){
            newFile();
        }
        else {
            openFile();
            }
    }//GEN-LAST:event_keyFileActionPerformed

    private void movePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movePanelMousePressed
        // TODO add your handling code here:
        initialClick = evt.getPoint();
        getComponentAt(initialClick);
   
    }//GEN-LAST:event_movePanelMousePressed
public  void newFile(){
                JFileChooser fileChooser = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files (add .txt at end of filename)","txt");
		fileChooser.setFileFilter(filter);
                fileChooser.setDialogTitle("Create File");
                fileChooser.setApproveButtonText("Create");
                
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            BufferedWriter writer;
            if(fileChooser.getSelectedFile()!=null){
                    try {
                    writer = new BufferedWriter(new FileWriter(fileChooser.getSelectedFile()));
                    writer.write(Key);
                    writer.close();
                    }
                    catch(IOException e){
                    System.out.println("error");
                    }
                    TextEditor.statusLabel.setText("Key File stored at :"+fileChooser.getSelectedFile().getAbsolutePath());
            
            }
        }
   }

void openFile(){
                File KeyFile=FileSelector.chooseFile("Text Files","txt");
                BufferedReader reader;
                keyString = new StringBuilder();
            try {
                reader = new BufferedReader(new FileReader(KeyFile));
                while (reader.ready()) {
                    keyString.append(reader.readLine() + "\n");
                }
                reader.close();
                System.out.println("here1");
                Key=keyString.toString();
                System.out.println("here2");
                keyField.setText(Key);
                
                System.out.println("here3");
                }
            catch (IOException ioe) {
                System.out.println("error");
            }
            super.repaint();
            super.validate();
            TextEditor.statusLabel.setText("blah");
            
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }
    
    private int choice;
    private KeyGenerator keyGen ;
    private int mode;
    private File text;
    private Point initialClick;
    public static String Key;
    private StringBuilder keyString;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Continue;
    private javax.swing.JButton close;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTextField keyField;
    private javax.swing.JButton keyFile;
    private javax.swing.JLabel label;
    private javax.swing.JButton minimise;
    private javax.swing.JPanel movePanel;
    // End of variables declaration//GEN-END:variables
}
